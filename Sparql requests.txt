###################################
Part. 1 - Requests on extended data
###################################

1 - Count the number of vaccined and not-vaccined persons

1.1 : Number of vaccinated

SELECT DISTINCT (COUNT(?s) as ?total) WHERE { ?s <http://extension.group4.fr/onto#vaccinationDate> ?o }

1.2 : Number of not-vaccinated

SELECT DISTINCT (COUNT(?s) as ?total) WHERE { ?s !<http://extension.group4.fr/onto#vaccinationDate> ?o }

2 - For the vaccined persons, retrieve the number of individuals in in vaccine groups, that is a group is a
given vaccine drug.

SELECT (?o as ?vaccine) (COUNT(?s) as ?total) WHERE { ?s <http://extension.group4.fr/onto#vaccine> ?o } GROUP BY ?o

3 - Write a query that retrieves AssociateProfessors that work for an organization that is a Department
and who teach a course. Using the “Explain” advanced features in the Query Query tab, interpret the
provided query plan.

PREFIX lubm1: <http://swat.cse.lehigh.edu/onto/univ-bench.owl#>
SELECT DISTINCT (?s as ?AssociateProfessor) WHERE { ?s rdf:type lubm1:AssociateProfessor .
                           ?dep rdf:type lubm1:Department .
                           ?s lubm1:worksFor ?dep .
                           ?s lubm1:teacherOf ?o
                         }



#####################################
Part. 2 - Requests on inferenced data
#####################################

PREFIX lubm1: <http://swat.cse.lehigh.edu/onto/univ-bench.owl#>
PREFIX ext: <http://extension.group4.fr/onto#>

1. Retrieve the last and first names of all professors. Note how many professors you are retrieving

SELECT ?fName ?lName WHERE {
  ?s rdf:type ?type .
  
  FILTER (CONTAINS(STR(?type), "Professor") || CONTAINS(STR(?type), "Lecturer"))
  
  ?s ext:fName ?fName .
  ?s ext:lName ?lName
}

=> 540 lines retrieved


2. Retrieve the last and first names of all professors that are advisors of some students.

SELECT (SAMPLE(?fName) as ?firstName) (SAMPLE(?lName) as ?lastName) WHERE {
  ?s rdf:type ?type .
  
  FILTER (CONTAINS(STR(?type), "Professor") || CONTAINS(STR(?type), "Lecturer"))
  
  ?advisored lubm1:advisor ?s.
  ?s ext:fName ?fName .
  ?s ext:lName ?lName
}

GROUP BY ?s

=> 445 lines retrieved


3. Retrieve the last and first names of professors that are member of an organization

SELECT (SAMPLE(?fName) as ?firstName) (SAMPLE(?lName) as ?lastName) WHERE {
  ?s rdf:type ?type .
  
  FILTER (CONTAINS(STR(?type), "Professor") || CONTAINS(STR(?type), "Lecturer"))
  
  ?s lubm1:worksFor ?organization.
  ?s ext:fName ?fName .
  ?s ext:lName ?lName
}

GROUP BY ?s

=> 540 lines retrieved


4. Retrieve the last and first names of professors that are member of an organization and advise a student.

SELECT (SAMPLE(?fName) as ?firstName) (SAMPLE(?lName) as ?lastName) WHERE {
  ?s rdf:type ?type .
  
  FILTER (CONTAINS(STR(?type), "Professor") || CONTAINS(STR(?type), "Lecturer"))
  
  ?s lubm1:worksFor ?organization.
  ?advisored lubm1:advisor ?s.
  ?s ext:fName ?fName .
  ?s ext:lName ?lName
}

GROUP BY ?s

=> 445 lines retrieved

5. In a non-inference Blazegraph configuration, rewrite the queries 3.2, 3.3 and 3.4 in such a way that it produces the same answer set as its respective original query




